{"ast":null,"code":"var _jsxFileName = \"/Users/yingyangzhang/Desktop/aster/frontend/src/Components/PopUpForms.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport LoginForm from \"./LoginForm\";\nimport SignUpForm from \"./SignUpForm\";\nimport InformationForm from \"./InformationForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PopUpForms(_ref) {\n  _s();\n  let {\n    setIsPopUpForms,\n    currentUser,\n    setCurrentUser\n  } = _ref;\n  const [isSignUpForm, setIsSignUpForm] = useState(false);\n  const [isInformationForm, setIsInformationForm] = useState(false);\n  let popUpRef = useRef();\n  useEffect(() => {\n    let handler = e => {\n      if (!popUpRef.current.contains(e.target)) {\n        setIsPopUpForms(false);\n        console.log;\n      }\n    };\n    document.addEventListener('mousedown', handler);\n    return () => {\n      document.removeEventListener('mousedown', handler);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pop-up-forms\",\n    children: isInformationForm ? /*#__PURE__*/_jsxDEV(InformationForm, {\n      popUpRef: popUpRef,\n      currentUser: currentUser,\n      setCurrentUser: setCurrentUser,\n      setIsPopUpForms: setIsPopUpForms\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this) : isSignUpForm ? /*#__PURE__*/_jsxDEV(SignUpForm, {\n      popUpRef: popUpRef,\n      setIsSignUpForm: setIsSignUpForm,\n      setIsInformationForm: setIsInformationForm,\n      setCurrentUser: setCurrentUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(LoginForm, {\n      popUpRef: popUpRef,\n      setIsSignUpForm: setIsSignUpForm,\n      setCurrentUser: setCurrentUser,\n      setIsPopUpForms: setIsPopUpForms\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_s(PopUpForms, \"hsKMGnNbKGI2ikydNKJZXQtvFLc=\");\n_c = PopUpForms;\nvar _c;\n$RefreshReg$(_c, \"PopUpForms\");","map":{"version":3,"names":["React","useState","useRef","useEffect","LoginForm","SignUpForm","InformationForm","PopUpForms","setIsPopUpForms","currentUser","setCurrentUser","isSignUpForm","setIsSignUpForm","isInformationForm","setIsInformationForm","popUpRef","handler","e","current","contains","target","console","log","document","addEventListener","removeEventListener"],"sources":["/Users/yingyangzhang/Desktop/aster/frontend/src/Components/PopUpForms.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport LoginForm from \"./LoginForm\";\nimport SignUpForm from \"./SignUpForm\";\nimport InformationForm from \"./InformationForm\";\n\nexport default function PopUpForms({setIsPopUpForms, currentUser, setCurrentUser}) {\n    const [isSignUpForm, setIsSignUpForm] = useState(false);\n    const [isInformationForm, setIsInformationForm] = useState(false);\n    let popUpRef = useRef();\n\n    useEffect(() => {\n        let handler = e => {\n            if(!popUpRef.current.contains(e.target)) {\n                setIsPopUpForms(false);\n                console.log\n            }\n        }\n\n        document.addEventListener('mousedown', handler);\n\n        return () => {\n            document.removeEventListener('mousedown', handler);\n        }\n    })\n\n    return (\n        <div className=\"pop-up-forms\">\n            {isInformationForm ? \n            <InformationForm popUpRef={popUpRef} currentUser={currentUser} setCurrentUser={setCurrentUser} setIsPopUpForms={setIsPopUpForms}/>\n            :\n            isSignUpForm ? \n            <SignUpForm popUpRef={popUpRef} setIsSignUpForm={setIsSignUpForm} setIsInformationForm={setIsInformationForm} setCurrentUser={setCurrentUser}/>\n            : \n            <LoginForm popUpRef={popUpRef} setIsSignUpForm={setIsSignUpForm} setCurrentUser={setCurrentUser} setIsPopUpForms={setIsPopUpForms}/>}\n        </div>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,eAAe,MAAM,mBAAmB;AAAC;AAEhD,eAAe,SAASC,UAAU,OAAiD;EAAA;EAAA,IAAhD;IAACC,eAAe;IAAEC,WAAW;IAAEC;EAAc,CAAC;EAC7E,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACY,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACjE,IAAIc,QAAQ,GAAGb,MAAM,EAAE;EAEvBC,SAAS,CAAC,MAAM;IACZ,IAAIa,OAAO,GAAGC,CAAC,IAAI;MACf,IAAG,CAACF,QAAQ,CAACG,OAAO,CAACC,QAAQ,CAACF,CAAC,CAACG,MAAM,CAAC,EAAE;QACrCZ,eAAe,CAAC,KAAK,CAAC;QACtBa,OAAO,CAACC,GAAG;MACf;IACJ,CAAC;IAEDC,QAAQ,CAACC,gBAAgB,CAAC,WAAW,EAAER,OAAO,CAAC;IAE/C,OAAO,MAAM;MACTO,QAAQ,CAACE,mBAAmB,CAAC,WAAW,EAAET,OAAO,CAAC;IACtD,CAAC;EACL,CAAC,CAAC;EAEF,oBACI;IAAK,SAAS,EAAC,cAAc;IAAA,UACxBH,iBAAiB,gBAClB,QAAC,eAAe;MAAC,QAAQ,EAAEE,QAAS;MAAC,WAAW,EAAEN,WAAY;MAAC,cAAc,EAAEC,cAAe;MAAC,eAAe,EAAEF;IAAgB;MAAA;MAAA;MAAA;IAAA,QAAE,GAElIG,YAAY,gBACZ,QAAC,UAAU;MAAC,QAAQ,EAAEI,QAAS;MAAC,eAAe,EAAEH,eAAgB;MAAC,oBAAoB,EAAEE,oBAAqB;MAAC,cAAc,EAAEJ;IAAe;MAAA;MAAA;MAAA;IAAA,QAAE,gBAE/I,QAAC,SAAS;MAAC,QAAQ,EAAEK,QAAS;MAAC,eAAe,EAAEH,eAAgB;MAAC,cAAc,EAAEF,cAAe;MAAC,eAAe,EAAEF;IAAgB;MAAA;MAAA;MAAA;IAAA;EAAE;IAAA;IAAA;IAAA;EAAA,QAClI;AAEd;AAAC,GA/BuBD,UAAU;AAAA,KAAVA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}